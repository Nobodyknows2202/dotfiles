call plug#begin('~/.vim/plugins')

Plug 'vim-airline/vim-airline'
Plug 'vim-airline/vim-airline-themes'

Plug 'neoclide/coc.nvim', {'branch': 'release'}
Plug 'mxw/vim-jsx'

Plug 'altercation/vim-colors-solarized'

Plug 'dense-analysis/ale'

Plug 'junegunn/fzf', { 'dir': '~/.fzf', 'do': './install --all' }
Plug 'junegunn/fzf.vim'

Plug 'tpope/vim-eunuch'

Plug 'udalov/kotlin-vim'

call plug#end()

let g:airline_theme='light'
let g:airline_powerline_fonts=1

let g:ale_linters = {'kotlin': ['ktlint'], 'javascript': ['eslint', 'standard'], 'rust': ['rustfmt']}
let g:ale_fixers = {'kotlin': ['ktlint'], 'javascript': ['eslint', 'standard'], 'rust': ['rustfmt']}
let g:ale_completion_enabled = 1
let g:ale_fix_on_save = 1

" let g:syntastic_checkers_kt = ['ktlint']

map ; :Files<CR>

map ' :w<CR>:e .<CR>

"Map tab to 'fix all of my issues please!'
"Replaces multiple spaces with a tab, and ending whitespace with nothing!
" nnoremap <C-i> :%s/\s\+$//ge<CR>:%s/ \{2,}/	/ge<CR>
" vnoremap <C-i> :s/\s\+$//ge<CR>:s/ \{2,}/	/ge<CR>
" nnoremap <C-Space> /<++><CR>
"
" To take full use of the COC, use 'CocInstall coc-tsserver coc-json' for completion in javascript

inoremap <silent><expr> <TAB>
      \ pumvisible() ? "\<C-n>" :
      \ <SID>check_back_space() ? "\<TAB>" :
      \ coc#refresh()
inoremap <expr><S-TAB> pumvisible() ? "\<C-p>" : "\<C-h>"

function! s:check_back_space() abort
  let col = col('.') - 1
  return !col || getline('.')[col - 1]  =~# '\s'
endfunction

" Use <c-space> to trigger completion.
inoremap <silent><expr> <c-space> coc#refresh()

" Use <cr> to confirm completion, `<C-g>u` means break undo chain at current position.
" Coc only does snippet and additional edit on confirm.
inoremap <expr> <cr> pumvisible() ? "\<C-y>" : "\<C-g>u\<CR>"

set tabstop=4
set shiftwidth=4

set nu rnu
set noswapfile

syntax enable
set background=dark
colorscheme solarized

let g:airline_powerline_fonts = 1
